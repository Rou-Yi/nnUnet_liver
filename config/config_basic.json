{
  "//////////////////////////////////////": "more or less won't change ever",
  "num_interval_per_valid": 1,
  "amsgrad": true,
  "multi_gpu": true,
  "amp": true,
  "cudnn_benchmark": false,
  "determinism": {
    "random_seed": 123
  },
  "//////////////////////////////////////////": "tunable parameters",
  "optimizer_name": "@SGD",
  "learning_rate": 1e-4,
  "weight_decay": 1e-4,
  "epochs": 300,
  "//////////////////////////////////////////": "change if memory not enough",
  "x_size": 160,
  "y_size": 160,
  "z_size": 96,
  "x_spacing": 1.0,
  "y_spacing": 1.0,
  "z_spacing": 1.0,
  "train_batch_size": 3,
  "val_batch_size": 1,
  "num_samples": 4,
  "///////////////////////////////////////////////": "set single or multiple channel; accepted values are 'single' or 'multi'",
  "single_or_multi": "single",
  "intensity_threshold": 1,
  "num_workers": 16,
  "/////////////////////////////////////////": "transforms, making assumption here that extra keys also use nearest interpolation, like label_keys, while image_keys uses bilinear interpolation, which may not be best fit; image_type accepts xray, ct, or mri",
  "image_keys": ["image"],
  "label_keys": ["label"],
  "extra_keys": [],
  "gt": "label",
  "image_type": "mri",
  "a_min": -57,
  "a_max": 164,
  "/////////////////////////////////////////": "metrics",
  "surface_dice_threshold": [2.5603],
  "surface_dice_95_threshold": [4.00093],
  "/////////////////////////////////////////": "losses",
  "loss_losses": ["@dice_ce_loss"],
  "loss_weights": [1],
  "loss_need_extras": [false],
  "loss_need_epochs": [false],
  "loss_need_masks": [false],
  "/////////////////////////////////////////": "datasets",
  "dataset_file": ["{DATASET_JSON}"],
  "DATASET_JSON": {
  },
  "DATASET_JSON2": {
      "AP": "AP",
      "liver": "liver"
  },
  "data_root_dir": "/data/hsu/liver/New/New",
  "train_data_list_key": ["training"],
  "val_data_list_key": ["validation"],
  "cache_rate": 0,
  "factor": 1,
  "/////////////////////////////////////////": "models, out_channels is the num of classes",
  "model1": {
    "name": "DynUNet",
    "args": {
	"in_channels": 1,
  	"out_channels": 2,
	"spatial_dims": 3,
	"kernel_size": [
		[3, 3, 3],
		[3, 3, 3],
		[3, 3, 3],
		[3, 3, 3],
		[3, 3, 3],
		[3, 3, 3]],
	"strides": [
		[1, 1, 1],
		[2, 2, 2],
		[2, 2, 2],
		[2, 2, 2],
		[2, 2, 2],
		[2, 2, 1]],
	"upsample_kernel_size": [
		[2, 2, 2],
		[2, 2, 2],
		[2, 2, 2],
		[2, 2, 2],
		[2, 2, 1]],
	"deep_supervision": false
  	  }
  },

  "model_type1": "unet_form",
    "dont_load_ckpt_model": true,
 
  "model_type2": "seg_path_type", 
  "model_path2": "models.v2_cla_v2_c2fnas.C2FNAS",
  "in_channels2": 1,
  "out_channels2": 2,

  "model_type3": "seg_path_type", 
  "model_path3": "models.v2_cla_v2_c2fnas.C2FNAS",
  "in_channels3": 1,
  "out_channels3": 2,
  "/////////////////////////////////////////": "postfixes, start from postfix1; number have to increase by 1 each time, i.e. postfix1, postfix2, postfix3, only include the postfixes you want - should correspond with model out_channel number",
  "postfix1": "background",
  "postfix2": "bm",
  "dont_save_segmentation": false,
  "/////////////////////////////////////////": "trainers, extra stuff",
  "deep_sup_losses": [],
  "to_cascade": false,
  "has_vae": false,
  "has_simclr": false,
  "ndimaged_label": false,
  "ndimaged_label_and_weight": false,
  "/////////////////////////////////////////": "inference, specifically for ensemble, ensemble_method accepts null, mean, or vote",
  "ensemble_method": "null",
  "pred_keys": ["pred0", "pred1"],
  "pred_meta_keys": ["pred0_meta_dict", "pred1_meta_dict"],
  "networks": ["@model"],
  "model_paths": ["{MMAR_CKPT}", "{MMAR_CKPT2}"]
}
